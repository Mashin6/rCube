%\VignetteIndexEntry{Guide to the "rCube" package}
%\VignettePackage{rCube}
%\VignetteEngine{knitr::knitr}

\documentclass{article}

<<knitr, echo=FALSE, results="hide">>=
library("knitr")
opts_chunk$set(tidy=FALSE,dev="png",fig.show="hide",
               fig.width=4,fig.height=4.5,
               message=FALSE)
@ 

<<style, eval=TRUE, echo=FALSE, results="asis">>=
BiocStyle::latex()
@



\title{rCube - RNA-Rates in R}
\author{Leonhard Wachutka$^{1,*}$, Carina Demel$^{2}$, Julien Gagneur$^{1}$ \\
[1em] \small{$^{1}$ Department of Informatics, Technical University of Munich, Munich, Germany} \\
\small{$^{2}$ Max Planck Institute for biophysical Chemistry, G\"ottingen, Germany} \\
\small{\texttt{$^*$ wachutka (at) in.tum.de}}
}


\begin{document}


\maketitle

%\noindent This vignette describes version \Sexpr{packageDescription("rCube")$Version} of the \Rpackage{rCube} package.

%\noindent Last revision of this document: \StrMid{$Date: 2017-07-25 $}{8}{18}

<<options,results="hide",echo=FALSE>>=
options(digits=3, width=80, prompt=" ", continue=" ")
@


\begin{abstract}
% A common problem of RNA-Seq experiments is the normalization of different
% samples, especially when they were also treated differently. A special case is
% the 4sU-labeling and purification, followed by deep-sequencing, where two libraries are generated
% from each RNA fraction: First, in one part of the fraction, the 4sU-labeled
% RNAs are pulled down and gives the labeled (``L") fraction of the experiment for
% library preparation. Second, the total RNA (labeled and unlabeled, ``T") is used
% for the preparation of another RNA-Seq library. As the RNA amount for library
% preparation is usually stringent, the sequencing results do not reflect
% reality. Here, we have to account for the sequencing depth of different samples
% and especially adjust the ratio of Labeled to Total RNA-Seq libraries.

RNA rates: synthesis, splicing, degradation:

TT-seq allows to monitor local synthesis rates

provide a framework to extract RNA rates from BAM files

\vspace{1em}
  
  \textbf{rCube version:} \Sexpr{packageDescription("rCube")$Version}

  \vspace{1em}
  
  \begin{center}
    \begin{tabular}{ | l | }
      \hline 
      If you use rCube in published research, please cite:  \\
      \\
      L. Wachutka, C. Demel, J. Gageur: \\ %Moderated estimation of \\
     % fold change and dispersion for RNA-Seq data with DESeq2. \\
     % bioRxiv (2014). doi:10.1101/002832 \cite{Love:2014:biorxiv} \\
      \hline 
    \end{tabular}
  \end{center}
  
\end{abstract}


\tableofcontents


%--------------------------------------------------
\section{Background}
%--------------------------------------------------


As described in .... 4sU-seq allows to monitor changes in the RNA metabolism. If cells are exposed to 4sU, they rapidly take up this Uridine analog and incorporate it into newly-synthesized RNAs. This way, newly-synthesized RNAs are labeled and can be extracted from the total RNA in the sample. The longer the labeling time, e.i. the time from 4sU addition to harvesting the cells, the bigger is the proportion of labeled RNAs among all RNAs.

%--------------------------------------------------
\section{Getting started} \label{GettingStarted}
%--------------------------------------------------

This vignette provides a pipeline how to...
starting from BAM files...
You will learn how to estimate sample specific sequencing
depths and cross-contamination rates from spike-in counts. These values can be
used to normalize gene expression values obtained by RNA-Seq and thus estimate
gene-specific synthesis and degradation rates. 
By extracting reads spanning junctions, splicing times can be estimated. For 
more robust estimation, multiple samples with different labeling times are
taken into account.
Before starting, the package must be loaded by:

<<LoadingLibrary, echo=TRUE, results="hide">>=
library("rCube")
@


\subsection{Input Data}
The rCube package works on \Rclass{rCubeExperiment} containers, that rely on the
\Rclass{SummerizedExperiment} class.
The \Robject{rowRanges} of the \Rclass{rCubeExperiment} is a \Rclass{GRanges} object of
features, for which RNA rates should be estimated. Experimental sample information
can be either provided by a design matrix or this information can be extracted from
the BAM-file names (when they fulfil the required structure).
Then, an empty \Rclass{rCubeExperiment}, e.g. for the artificial spike-ins, can
be constructed as follows:
<<EmptyrCubeExperimentContainer, echo=TRUE>>=
data("spikeins")
data("spikeinLabeling")
data("spikeinLengths")
data("designMatrix")

spikeinCounts <- setupExperimentSpikeins(rows=spikeins,
                                         designMatrix=designMatrix,
                                         length=spikeinLengths,
                                         labelingState=spikeinLabeling)
@
The \Rfunction{setupExperiment} can be used analogically for genes/exons/introns/junctions. Here, only the \Robject{rows} and either \Robject{designMatrix} or \Robject{files} has
to be set. See also section \ref{Counting}.

The individual information from the \Rclass{rCubeExperiment} can be assessed by:
<<rCubeExperimentContainer, echo=TRUE>>=
# feature information
rowRanges(spikeinCounts)

# sample information
colData(spikeinCounts)

# read counts
assay(spikeinCounts)
@

\subsection{Read counting}\label{Counting}

All RNA rate estimations of this package rely on read counts. These can be either
provided as count matrices, or read counts can be obtained from BAM files using
the rCube pipeline.
<<counting, echo=TRUE>>=
#TODO 
@

Alternatively, count matrices can be assigned to the correctly formatted, empty
\Rclass{rCubeExperiment} object:
<<countAssignment, echo=TRUE>>=
#TODO 
@

% #TODO
% which section do we do::
% estimating gene specific syn dec rates (with spikein norm, based on const exons, then summarize rates)
% estimating splicing rates from labeling timecourse



%--------------------------------------------------
\section{Normalization of TT-seq/4sU-seq and RNA-Seq samples} \label{Normalization}
%--------------------------------------------------

The three possible normalization methods are described in detail below.

\subsection{Normalization by fitting a GLM to artifical spike-in read counts}

By normalization, we want to account for the sequencing depth of different samples
and especially adjust the ratio between Labeled to Total RNA-Seq libraries.
Additionally, the labeled RNA extraction is not perfect and some
unlabeled RNA may contaminate the labeled RNA fraction. As the gene-expression
also always varies a little bit for biological samples, read counts from real
genes might lead to confusing estimations. Therefore, we apply our
normalization approach only to artificial spike-ins from the External RNA 
Control Consortium (ERCC), for which
the initial amount of each spike-in is known and the same across all samples.
Some of the spike-ins were 4sU-labeled by in-vitro transcription, so the
cross-contamination of unlabeled spike-ins in labeled samples can be monitored.
The goal of this package is to reliably estimate sequencing depths and
cross-contamination rates per sample, given 4sU- and total RNA-Seq data.

The sample specific parameters like sequencing depth and cross-contamination
rate are estimated from spike-in counts only. Therefore, we fit a
 generalized linear model (GLM) of the Negative Binomial family with a log link
 function.
The response of the GLM are the observed spike-in counts, and the terms that
specify the linear predictor of the response are comprised of:
\begin{itemize}
\item a sample specific factor (that reflects the sample specific sequencing
depth),
\item a labeled sample specific factor (that reflects the control for cross
contamination (only estimated for unlabeled spike-ins in labeled samples)), and
\item a spike-in specific factor to allow for some spike-in specific variation
e.g. due to sequence biases.
\end{itemize}
Additionally, the length of each spike-in is used as an offset, i.e. a known slope for the covariate.

<<SpikeinNormalization, echo=TRUE, eval=TRUE>>=
data(geneCounts)
data(spikeinCounts)
geneCounts <- estimateSizeFactors(geneCounts, spikeinCounts, method="spikeinGLM")
colnames(colData(geneCounts))
geneCounts$sequencing.depth
geneCounts$cross.contamination
@

Note, the cross-contamination value for all total RNA-seq samples is 1, as 100\%
of the unlabeled RNAs are supposed to be in the sample.
Additional fitting results are stored in the \Robject{metadata} of the resulting
\Rclass{rCubeExperiment} object.
<<SpikeinNormalizationMetadata, echo=TRUE, eval=FALSE>>=
metadata(geneCounts)
@

\subsection{Normalization using mean counts of artifical spike-ins}
%TODO

\subsection{Normalization using joint model}
%TODO

\newpage


%--------------------------------------------------
\section{Estimating gene-specific synthesis and degradation rates} \label{SynDec}
%--------------------------------------------------


Using the sample-specific values for sequencing depth and cross-contamination as estimated in the previous section, we can now normalize all the samples. It is especially important to bring labeled (4sU-seq/TT-seq) and total RNA-seq samples to comparable scales. Labeled and total RNA-seq samples can be sequenced at the same depth, and the same amount of RNA is used for library preparation, but the resulting read counts do not reflect the true ratio of labeled vs all RNAs in the cells, where the amount of newly-synthesized, labeled RNA should be much less than the total RNA amount. Therefore it is necessary to upscale the read counts from total RNA-seq samples compared to the labeled RNA read counts.

\subsection{Providing gene-wise dispersion estimates} \label{Dispersion}
Usually, read counts in different RNA-seq samples underly fluctuations due to biological or technical variances.
To take these fluctuations into account, we estimate each gene's dispersion.
For each gene, a single dispersion estimate for all 4sU-Seq samples and for all
Total RNA-Seq samples is needed. Here, we can use the method provided in the
DESeq2 package \cite{Love2014} The wrapper function estimateGeneDispersion
applies the DESeq algorithm to all genes, while separating the count table
according to the RNA-Seq protocol (labeled or total RNA). It is possible to
choose between all provided DESeq dispersion estimates, namely the genewise
maximum likelihood dispersion estimate (``dispGeneEst"), the smooth curve fitted
through the gene-wise disperion estimates (``dispFit") and the genewise
dispersion estimates shrunken towards the fitted curve (``dispMAP", default).
The input for the estimateGeneDispersion function is therefore only a n*m
matrix, providing count data for n genes under m conditions, and a vector of
length m, indiciating for each condition if it was a labeled 4sU-Seq sample
(``L") or a total RNA-Seq sample (``T"). The function returns a matrix consisting
of n rows and 2 columns, the Labeled (``L") and Total (``T") dispersion estimates
for all n genes.

<<DESeqDispersion, echo=TRUE, eval=TRUE>>=
geneCounts <- estimateSizeDispersions(geneCounts, method='DESeqDispMAP')
rowRanges(geneCounts)
@


\subsection{Feature-specific synthesis and degratation rate estimates}

After estimating sequencing depth and cross-contamination rates per sample (see Section \ref{Normalization}) and extracting feature-specific dispersion estimates (see Section \ref{Dispersion}), we can now estimate RNA synthesis and degradation rate for each feature and condition individually. Multiple replicates for the same condition can be used for a joint estimation. 
The user has to specify for which replicate or combination of replicates the results should be estimated. Therefore, the \Robject{replicate} parameter is a vector of all combinations that should be evaluated. For the joint estimation for multiple replicates, these have to be
given as a string separeted by a ``:''. In the following example, we will obtain individual results for replicate 1 and 2 and also results for a joint estimation.

<<SynDecEstimation, echo=TRUE, eval=TRUE>>=
rates <- estimateRateByFirstOrderKinetics(geneCounts, replicate=c(1, 2, "1:2"),
method='single', BPPARAM=BiocParallel::MulticoreParam(1))
@


%--------------------------------------------------
\section{Estimating splicing times from junction read counts} \label{Splicing}
%--------------------------------------------------

%--------------------------------------------------
\section{Session Information}
%--------------------------------------------------

This vignette was generated using the following package versions:

<<sessionInfo>>=
sessionInfo()
@

%--------------------------------------------------
\section{References}
%--------------------------------------------------
\begingroup
\renewcommand{\section}[2]{}%
\bibliography{refs}
\endgroup


\end{document}


